{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","components/Login/index.js","components/Login/Login.js","components/Lobby/LobbyUser.js","components/Lobby/index.js","components/Lobby/Lobby.js","components/Countdown/index.js","components/Countdown/Countdown.js","components/Game/Card/index.js","components/Game/Card/Card.js","components/Game/Lake/index.js","components/Game/Lake/Lake.js","components/Game/River/index.js","components/Game/River/River.js","components/Game/Nertz/index.js","components/Game/Nertz/Nertz.js","components/Game/Stream/index.js","components/Game/Stream/Stream.js","components/Game/logic.js","components/Game/index.js","components/Game/Game.js","components/CPUGame/index.js","components/CPUGame/CPUGame.js","components/Join/index.js","components/Join/Join.js","components/Scoreboard/index.js","components/Scoreboard/Scoreboard.js","components/Popup/index.js","components/Popup/Popup.js","components/Connecting/Spinner/index.js","components/Connecting/Spinner/Spinner.js","components/Connecting/index.js","components/App.js","components/Connecting/Connecting.js","serviceWorker.js","index.js"],"names":["Header","props","id","gameId","name","Login","useState","setName","type","placeholder","onChange","evt","target","value","toUpperCase","replace","slice","onClick","length","handleLogin","LobbyUser","className","Lobby","isReady","setIsReady","users","map","u","i","key","handleReady","isOffline","user","String","Number","readyUsers","indexOf","title","Countdown","shape","text","Card","card","suit","color","getTextFromValue","handleClick","style","Lake","lake","pile","River","Array","a","r","river","Nertz","nertz","Stream","streamPileSize","stream","streamIndex","console","log","nextStream","get_deck","deck","cards","index","randint","chosen","push","splice","solitaire_stack","bottom","top","lake_stack","n","Math","floor","random","Game","setRiver","setNertz","setStream","setStreamIndex","setStreamPileSize","selected","setSelected","score","setScore","updateScore","updateNertz","useEffect","newLake","result","removeOld","autoRemove","unselect","selectedPile","filter","includes","selectedStack","r0","r1","r2","fillBlank","forEach","newRiver","c","j","valid","select","document","getElementById","undefined","newStream","res","pos","stack","newR","newStreamIndex","min","newStreamPileSize","CPUGame","brainInterval","useRef","difficulty","delay","pNertz","offset","setTimeout","current","setInterval","action","nertz_river","nertz_lake","river_river","river_lake","stream_river","stream_update","stream_lake","clearInterval","clearTimeout","moves","k","concat","fill_river","updateCPUScore","get_lake","pop","updateCPUNertz","Join","setGameId","numCPUs","setNumCPUs","createGame","offline","throwPopup","diff","handleCreate","handleJoin","Scoreboard","leaderboard","scoreUpdate","scores","change","lb","Object","keys","update","prev","total","get_leaderboard","results","nertzPts","scoreText","get_results","gameCount","Popup","handleClose","Spinner","size","left","Connecting","client","goOffline","noConnect","w3cwebsocket","err","error","App","state","isJoinedOffline","willBeOffline","isConnected","isLoggedIn","isRunning","isLocked","isHost","CPUdiff","countdown","countdownTimeout","popup","lastLake","lastNertz","lastCPULake","lastCPUNertz","configureClient","onopen","setState","onmessage","message","msg","JSON","parse","data","newScores0","alert","endGame","send","stringify","cpu","cpuId","blank0Arr","from","blank13Arr","newScores1","newValue","newCPULake","newCPUNertz","handleStart","newTimeout","timers","handlePause","isPaused","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b76badec.chunk.js","sourcesContent":["import Header from './Header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div id=\"header\">\r\n            <h1>\r\n                <span>Nertz</span>\r\n                {props.gameId\r\n                    ?<span>{props.gameId}</span>\r\n                    : null\r\n                }\r\n                {props.name\r\n                    ? <span>{props.name}</span>\r\n                    : null\r\n                }\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n","import Login from './Login';\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport './Login.css';\r\n\r\nexport default function Login(props) {\r\n    const [name, setName] = useState('');\r\n    return (\r\n        <div id=\"login\">\r\n            <div>\r\n                <p id=\"login-announcement\">ENTER A USERNAME TO BEGIN</p>\r\n                <input type=\"text\" name=\"name\" placeholder=\"USERNAME\" onChange={(evt) => setName(evt.target.value.toUpperCase().replace(/([^A-Z\\s_\\d]|\\s(?=\\s))/g,'').slice(0,10))} value={name} />\r\n                <input type=\"button\" onClick={() => name.length ? props.handleLogin(name) : null} value=\"SUBMIT\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './LobbyUser.css';\r\n\r\nexport default function LobbyUser(props) {\r\n    return (\r\n        <div className=\"lobby-user\">\r\n            <p>{props.name}</p>\r\n        </div>\r\n    )\r\n}\r\n","import Lobby from './Lobby';\r\n\r\nexport default Lobby;\r\n","import React, { useState } from 'react';\r\nimport './Lobby.css';\r\nimport LobbyUser from './LobbyUser';\r\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\r\n\r\nexport default function Lobby(props) {\r\n    const [isReady, setIsReady] = useState(false);\r\n    const handleReady = () => {\r\n        props.handleReady(!isReady);\r\n        setIsReady(!isReady);\r\n    }\r\n\r\n    return (\r\n        <div id=\"lobby-container\">\r\n            <div id=\"lobby-announcement\">\r\n                <p>We're waiting to get started!</p>\r\n            </div>\r\n            <div id=\"lobby-user-container\">\r\n                {props.users.map((u,i) => <LobbyUser key={i} name={u} />)}\r\n            </div>\r\n            <div id=\"lobby-ready-container\">\r\n                <div id=\"lobby-ready-button\" className={isReady ? \"ready\" : \"unready\"} onClick={() => handleReady()}>\r\n                    <p>{isReady ? \"CANCEL\" : \"READY\"}</p>\r\n                </div>\r\n                {props.isOffline ? null : \r\n                    <div id=\"lobby-ready-users\">\r\n                        {props.users.map((user,i) => user !== String(\"CPU \"+Number(i+1))\r\n                            ?   <div key={i} className=\"ready-user\">\r\n                                    <>\r\n                                        <p>{user}</p>\r\n                                        {props.readyUsers.indexOf(user) !== -1 ? <FaCheckCircle className=\"ready\" title=\"ready\" /> : <FaTimesCircle className=\"unready\" title=\"not ready\" />}\r\n                                    </>\r\n                                </div>\r\n                            : null\r\n                        )}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Countdown from './Countdown';\r\n\r\nexport default Countdown;\r\n","import React from 'react';\r\nimport './Countdown.css';\r\n\r\nexport default function Countdown(props) {\r\n    return (\r\n        <div id=\"countdown-container\">\r\n            <div id={'countdown-'+props.shape}>\r\n                <h1 id=\"countdown-text\">{props.text}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Card from './Card';\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './Card.css';\r\nimport { GiSpades, GiDiamonds, GiHearts, GiClubs } from 'react-icons/gi';\r\n\r\nconst getTextFromValue = (value) => {\r\n    //convert Ace, Jack, Queen, King to letters\r\n    switch(Number(value)) {\r\n        case 0:\r\n            return '';\r\n        case 1:\r\n            return 'A';\r\n        case 11:\r\n            return 'J';\r\n        case 12:\r\n            return 'Q';\r\n        case 13:\r\n            return 'K';\r\n        default:\r\n            return String(Number(value));\r\n    }\r\n}\r\n\r\nexport default function Card(props) {\r\n    const value = props.card.slice(0,2);\r\n    const suit = props.card.slice(2,3);\r\n    const color = props.card.slice(3,4);\r\n    const text = getTextFromValue(value);\r\n\r\n    return (\r\n        <div id={props.user ? props.card+\"-\"+props.user : props.card} className=\"card-box\" onClick={() => props.user ? props.handleClick(props.card,props.user) : props.handleClick(props.card)}>\r\n            <div className=\"card\" style={{color: color === 'R' ? 'red' : color === 'B' ? 'black' : 'lime'}}>\r\n                <p>{text}</p>\r\n                {suit === 'H'\r\n                    ? <GiHearts title=\"hearts\"/>\r\n                    : suit === 'D'\r\n                        ? <GiDiamonds title=\"diamonds\" />\r\n                        : suit === 'S'\r\n                            ? <GiSpades title=\"spades\" />\r\n                            : suit === 'C'\r\n                                ? <GiClubs title=\"clubs\" />\r\n                                : <p></p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Lake from './Lake';\r\n\r\nexport default Lake;\r\n","import React from 'react';\r\nimport './Lake.css';\r\nimport Card from '../Card';\r\n\r\nexport default function Lake(props) {\r\n    return (\r\n        <fieldset id=\"lake\"><legend id=\"lake-add\">Lake</legend>\r\n            <div id=\"lake-container\">\r\n                <>\r\n                {props.lake.map((pile,i) =>\r\n                    <Card key={i} card={pile[pile.length-1].card} user={pile[pile.length-1].user.replace(/\\s/g,'_')} handleClick={props.handleClick} />\r\n                )}\r\n                </>\r\n                <div id=\"ace-out\" onClick={() => props.handleClick('ace-out')}>\r\n                    <p>ACE OUT</p>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n","import River from './River';\r\n\r\nexport default River;\r\n","import React from 'react';\r\nimport './River.css';\r\nimport Card from '../Card';\r\n\r\nexport default function River(props) {\r\n    return (\r\n        <fieldset id=\"river\"><legend>River</legend>\r\n            <div id=\"river-container\">\r\n                {[...Array(4)].map((a,r) =>\r\n                    <div key={r} className=\"river-pile\">\r\n                        {props.river[r].map((card,i) =>\r\n                            <Card key={i} card={card} handleClick={props.handleClick} />\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n","import Nertz from './Nertz';\r\n\r\nexport default Nertz;\r\n","import React from 'react';\r\nimport './Nertz.css';\r\nimport Card from '../Card';\r\n\r\nexport default function Nertz(props) {\r\n    return (\r\n        <fieldset id=\"nertz\"><legend>Nertz</legend>\r\n            <div id=\"nertz-container\">\r\n                <Card card={props.nertz[props.nertz.length-1]} handleClick={props.handleClick} />\r\n                <p>({props.nertz.length})</p>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n","import Stream from './Stream';\r\n\r\nexport default Stream;\r\n","import React from 'react';\r\nimport './Stream.css';\r\nimport Card from '../Card';\r\n\r\nexport default function Stream(props) {\r\n    return (\r\n        <fieldset id=\"stream\"><legend>Stream</legend>\r\n            <div id=\"stream-container\">\r\n                <div id=\"stream-cards\">\r\n                {[...Array(props.streamPileSize)].map((a,i) =>\r\n                    <Card key={i} card={props.stream[props.streamIndex+i]} handleClick={i === props.streamPileSize-1 ? props.handleClick : () => console.log(\"stream click\")} />\r\n                )}\r\n                </div>\r\n                <div id=\"next-stream\" onClick={() => props.nextStream()}>\r\n                    <p>NEXT</p>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n","export function get_deck() {\r\n    let deck = [],\r\n        cards = ['01HR','02HR','03HR','04HR','05HR','06HR','07HR',\r\n                 '08HR','09HR','10HR','11HR','12HR','13HR',\r\n                 '01SB','02SB','03SB','04SB','05SB','06SB','07SB',\r\n                 '08SB','09SB','10SB','11SB','12SB','13SB',\r\n                 '01DR','02DR','03DR','04DR','05DR','06DR','07DR',\r\n                 '08DR','09DR','10DR','11DR','12DR','13DR',\r\n                 '01CB','02CB','03CB','04CB','05CB','06CB','07CB',\r\n                 '08CB','09CB','10CB','11CB','12CB','13CB'];\r\n    while(cards.length) {\r\n        let index = randint(cards.length),\r\n            chosen = cards[index];\r\n        deck.push(chosen);\r\n        cards.splice(index,1);\r\n    }\r\n    if(deck.length === 52) {\r\n        return deck;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function solitaire_stack(bottom, top) {\r\n    if(Number(top.slice(0,2))+1 !== Number(bottom.slice(0,2))) {\r\n        //number alignment\r\n        return false;\r\n    } else if(top.slice(3,4) === bottom.slice(3,4)) {\r\n        //alternating suit color\r\n        return false;\r\n    } else {\r\n        //nothing failed tests\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function lake_stack(bottom, top) {\r\n    if(Number(top.slice(0,2))-1 !== Number(bottom.slice(0,2))) {\r\n        //number alignment\r\n        return false;\r\n    } else if(top.slice(2,3) !== bottom.slice(2,3)) {\r\n        //same suit\r\n        return false;\r\n    } else {\r\n        //nothing failed tests\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function randint(n) {\r\n    return Math.floor(Math.random()*n);\r\n}\r\n","import Game from './Game';\r\n\r\nexport default Game;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Game.css';\r\nimport Lake from './Lake';\r\nimport River from './River';\r\nimport Nertz from './Nertz';\r\nimport Stream from './Stream';\r\nimport { get_deck, solitaire_stack, lake_stack } from './logic.js';\r\n\r\nexport default function Game(props) {\r\n    //define non-stateful variables\r\n    const deck = get_deck();\r\n    // let score = 0;\r\n\r\n    //define stateful variables\r\n    const [river, setRiver] = useState([ [deck[0]], [deck[1]], [deck[2]], [deck[3]] ]);\r\n    const [nertz, setNertz] = useState(deck.slice(4,17)); // 4,17\r\n    const [stream, setStream] = useState(deck.slice(17,53)); //17,53\r\n    const [streamIndex, setStreamIndex] = useState(0);\r\n    const [streamPileSize, setStreamPileSize] = useState(3);\r\n    const [selected, setSelected] = useState(null);\r\n    const [score, setScore] = useState(0);\r\n    // const [isStalled, setIsStalled] = useState(false);\r\n    const { updateScore, updateNertz } = props;\r\n\r\n    useEffect(() => {\r\n        updateScore(score);\r\n    }, [updateScore,score]);\r\n    useEffect(() => {\r\n        updateNertz(nertz.length);\r\n    }, [updateNertz,nertz]);\r\n\r\n    const handleClick = (card, user='') => {\r\n        if(card === 'ace-out' && (selected && selected.slice(0,2) === '01')) {\r\n            //if ace selected and click on 'ace out'\r\n            props.newLake([...props.lake, [{card:selected,user:props.name}]]);\r\n            const result = removeOld(selected);\r\n            autoRemove(result);\r\n            unselect(selected);\r\n            setScore(score+1);\r\n\r\n        } else if(card === 'ace-out') {\r\n            //if click on 'ace out' without an ace selected\r\n            // *** INTENTIONALLY DO NOTHING ***\r\n\r\n        } else if(card.slice(0,2) === '00' && selected) {\r\n            //if click on blank with a selected card\r\n\r\n            //save selected stack\r\n            const selectedPile = [...river].filter(pile => pile.includes(selected));\r\n            const selectedStack = selectedPile.length\r\n                ? selectedPile[0].slice(selectedPile[0].indexOf(selected),selectedPile[0].length)\r\n                : [selected];\r\n\r\n            //remove old stack\r\n            const r0 = [...river];\r\n            const result = removeOld(selected);\r\n            if(result[0] === 'river') {\r\n                const r1 = result[1];\r\n                const r2 = fillBlank(card.slice(2,3),selectedStack,r1);\r\n                setRiver(r2);\r\n            } else {\r\n                const r1 = fillBlank(card.slice(2,3),selectedStack,r0);\r\n                setRiver(r1);\r\n                autoRemove(result);\r\n            }\r\n            unselect(selected);\r\n\r\n        } else if(card.slice(0,2) === '00') {\r\n            //if click on blank without selected card\r\n            // *** INTENTIONALLY DO NOTHING ***\r\n\r\n        } else if(selected === card) {\r\n            //if click on same card\r\n            unselect(card);\r\n\r\n        } else if(selected && selected !== card) {\r\n            //if click on different card than selected\r\n\r\n            //check if new click is in lake\r\n            props.lake.forEach((pile,i) => {\r\n                if(pile[pile.length-1].card === card && pile[pile.length-1].user === user) {\r\n                    //if you can stack them, stack them\r\n                    if(lake_stack(card,selected)) {\r\n                        let newLake = [...props.lake];\r\n                        newLake[i].push({card:selected,user:props.name});\r\n                        props.newLake(newLake);\r\n                        const result = removeOld(selected);\r\n                        autoRemove(result);\r\n                        unselect(selected);\r\n                        setScore(score+1);\r\n                    }\r\n                }\r\n            });\r\n\r\n            //check if new click is in river\r\n            river.forEach((pile,i) => {\r\n                if(pile[pile.length-1] === card) {\r\n                    //if you can stack them, stack them\r\n                    if(solitaire_stack(card,selected)) {\r\n                        //save selected stack\r\n                        const selectedPile = [...river].filter(pile => pile.includes(selected));\r\n                        const selectedStack = selectedPile.length\r\n                            ? selectedPile[0].slice(selectedPile[0].indexOf(selected),selectedPile[0].length)\r\n                            : [selected];\r\n\r\n\r\n                        //remove old stack\r\n                        const result = removeOld(selected);\r\n                        let newRiver = [...river];\r\n                        if(result[0] === \"river\") {\r\n                            newRiver = result[1];\r\n                        } else {\r\n                            autoRemove(result);\r\n                        }\r\n\r\n                        //push selected stack\r\n                        selectedStack.forEach((c,j) => {\r\n                            newRiver[i].push(c);\r\n                        });\r\n                        //update river and selected vars\r\n                        setRiver(newRiver);\r\n                        unselect(selected);\r\n                    }\r\n                }\r\n            });\r\n\r\n        } else {\r\n            //in all else, see if exists outside lake\r\n            let valid = false;\r\n            river.forEach((pile, i) => {\r\n                pile.forEach((c, j) => {\r\n                    if(c===card) {\r\n                        valid = true;\r\n                    }\r\n                });\r\n            });\r\n            if(nertz[nertz.length-1] === card) valid = true;\r\n            if(stream[streamIndex+streamPileSize-1] === card) valid = true;\r\n\r\n            if(valid) select(card);\r\n        }\r\n    }\r\n\r\n    const select = (card) => {\r\n        const c = document.getElementById(card);\r\n        c.className += \" selected\";\r\n        setSelected(card);\r\n    }\r\n\r\n    const unselect = (card) => {\r\n        const c = document.getElementById(card);\r\n        c.className = \"card-box\";\r\n        setSelected(undefined);\r\n    }\r\n\r\n    const removeOld = (card) => {\r\n        if(card === nertz[nertz.length-1]) {\r\n            //if top of nertz pile\r\n            const newNertz = [...nertz.slice(0,nertz.length-1)];\r\n            return [\"nertz\",newNertz];\r\n        } else if(card === stream[streamIndex+streamPileSize-1]) {\r\n            //if top of stream pile\r\n            const newStream = [\r\n                ...stream.slice(0,streamIndex+streamPileSize-1),\r\n                ...stream.slice(streamIndex+streamPileSize,stream.length)\r\n            ];\r\n            setStreamPileSize(streamPileSize-1);\r\n            if(!streamPileSize) nextStream();\r\n            return [\"stream\",newStream];\r\n        } else {\r\n            let newRiver = [...river];\r\n            river.forEach((pile,i) => {\r\n                pile.forEach((c,j) => {\r\n                    if(c === card) {\r\n                        newRiver[i] = [...pile.slice(0,j)];\r\n                        if(!newRiver[i].length) {\r\n                            newRiver[i] = ['00'+i+'X'];\r\n                        }\r\n                        // break;\r\n                    }\r\n                });\r\n            });\r\n            return [\"river\",newRiver];\r\n        }\r\n    }\r\n\r\n    const autoRemove = (res) => {\r\n        switch(res[0]) {\r\n            case 'river':\r\n                setRiver(res[1]);\r\n                break;\r\n            case 'nertz':\r\n                setNertz(res[1]);\r\n                break;\r\n            case 'stream':\r\n                setStream(res[1]);\r\n                break;\r\n            default:\r\n                console.log(\"unrecognized removal location\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    const fillBlank = (pos,stack,r) => {\r\n        let newR = [...r];\r\n        newR[pos] = [];\r\n        stack.forEach((c,i) => {\r\n            newR[pos].push(c);\r\n        });\r\n        return newR;\r\n    }\r\n\r\n    const nextStream = () => {\r\n        let newStreamIndex = streamIndex+Math.min(3,stream.length-streamIndex);\r\n        if(newStreamIndex >= stream.length) newStreamIndex=0;\r\n        setStreamIndex(newStreamIndex);\r\n        const newStreamPileSize = Math.min(3,stream.length-newStreamIndex);\r\n        setStreamPileSize(newStreamPileSize);\r\n        if(selected) unselect(selected);\r\n    }\r\n\r\n    return (\r\n        <div id=\"game\">\r\n            <div id=\"game-lake-row\">\r\n                <Lake lake={props.lake} handleClick={handleClick} />\r\n            </div>\r\n            <div id=\"game-player-row\">\r\n                <div id=\"game-player-row-1\">\r\n                    <River river={river} handleClick={handleClick} />\r\n                </div>\r\n                <div id=\"game-player-row-2\" className=\"flex-row\">\r\n                    <Nertz nertz={nertz.length > 0 ? nertz : ['00XX']} handleClick={handleClick} />\r\n                    <Stream stream={stream} handleClick={handleClick} streamIndex={streamIndex} streamPileSize={streamPileSize} nextStream={nextStream} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import CPUGame from './CPUGame';\r\n\r\nexport default CPUGame;\r\n","import { useEffect, useRef } from 'react';\r\nimport {\r\n    randint,\r\n    get_deck,\r\n    solitaire_stack,\r\n    lake_stack\r\n} from '../Game/logic.js';\r\n\r\nexport default function CPUGame(props) {\r\n    const brainInterval = useRef(null);\r\n    const deck = get_deck();\r\n    const river = useRef([ [deck[0]], [deck[1]], [deck[2]], [deck[3]] ]);\r\n    const nertz = useRef(deck.slice(4,17));\r\n    const stream = useRef(deck.slice(17,53));\r\n    const streamIndex = useRef(0);\r\n    const streamPileSize = useRef(3);\r\n    const score = useRef(0);\r\n    const { difficulty } = props;\r\n\r\n    const action = (pNertz=1) => {\r\n        let action = false;\r\n        if(Math.random() < pNertz/3) {\r\n            switch(randint(2)) {\r\n                case 0:\r\n                    action = nertz_river();\r\n                    break;\r\n                case 1:\r\n                    action = nertz_lake();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            switch(randint(4)) {\r\n                case 0:\r\n                    action = river_river();\r\n                    break;\r\n                case 1:\r\n                    action = river_lake();\r\n                    break;\r\n                case 2:\r\n                    action = stream_river();\r\n                    if(!action || streamPileSize.current === 0) {\r\n                        stream_update();\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    action = stream_lake();\r\n                    if(!action || streamPileSize.current === 0) {\r\n                        stream_update();\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n        }\r\n\r\n        }\r\n    }\r\n    //start and clear brain interval\r\n    useEffect(() => {\r\n        let delay = 1,\r\n            pNertz = 1;\r\n        switch(Number(difficulty)) {\r\n            case 1:\r\n                delay = 2000;\r\n                pNertz = 0.4;\r\n                break;\r\n            case 2:\r\n                delay = 1600;\r\n                pNertz = 0.8;\r\n                break;\r\n            case 3:\r\n                delay = 1000;\r\n                pNertz = 1.0;\r\n                break;\r\n            default:\r\n                console.log(\"invalid difficulty selected\");\r\n                break;\r\n        }\r\n        const offset = setTimeout(() => {\r\n            brainInterval.current = setInterval(() => action(pNertz), delay);\r\n        }, Math.random()*delay);\r\n\r\n\r\n        return () =>  {\r\n            clearInterval(brainInterval.current);\r\n            clearTimeout(offset);\r\n        }\r\n    });\r\n\r\n    const river_river = () => {\r\n        let moves = [];\r\n        for(let i=0; i<4; i++) {\r\n            for(let j=0; j<4; j++) {\r\n                if(i===j) continue;\r\n                for(let k=0; k<river.current[i].length; k++) {\r\n                    if(solitaire_stack(\r\n                        river.current[j][river.current[j].length-1],\r\n                        river.current[i][k])) {\r\n                            moves.push([i,j,k]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(moves.length) {\r\n            let chosen = moves[randint(moves.length)];\r\n            river.current[chosen[1]] = river.current[chosen[1]].concat(\r\n                                       river.current[chosen[0]].slice(\r\n                                       chosen[2],river.current[chosen[0]].length));\r\n            river.current[chosen[0]] = [];\r\n            fill_river();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const river_lake = () => {\r\n        for(let i=0; i<4; ++i) {\r\n            //move aces to lake\r\n            if(river.current[i][river.current[i].length-1].slice(0,2) === '01') {\r\n                score.current = score.current + 1;\r\n                props.updateCPUScore(props.id,score.current);\r\n                let newLake = props.get_lake();\r\n                newLake.push([{card:river.current[i].pop(),user:\"*\"+props.id}]);\r\n                props.newLake(newLake);\r\n                fill_river();\r\n                return true;\r\n            }\r\n\r\n            //move lake stack-ables\r\n            let newLake = props.get_lake();\r\n            for(let pile of newLake) {\r\n                if(lake_stack(pile[pile.length-1].card,\r\n                    river.current[i][river.current[i].length-1])) {\r\n                        score.current = score.current + 1;\r\n                        props.updateCPUScore(props.id,score.current);\r\n                        pile.push({card:river.current[i].pop(),user:\"*\"+props.id});\r\n                        fill_river();\r\n                        props.newLake(newLake);\r\n                        return true;\r\n                }\r\n\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const nertz_river = () => {\r\n        for(let pile of river.current) {\r\n            let bottom = pile[pile.length-1],\r\n                top = nertz.current[nertz.current.length-1];\r\n            if(solitaire_stack(bottom,top)) {\r\n                pile.push(nertz.current.pop());\r\n                console.log(\"nertz pop:\",nertz.current.length,\"id:\",props.id);\r\n                props.updateCPUNertz(props.id,nertz.current.length);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const nertz_lake = () => {\r\n        //clear aces\r\n        if(nertz.current[nertz.current.length-1].slice(0,2) === '01') {\r\n            score.current = score.current + 1;\r\n            props.updateCPUScore(props.id,score.current);\r\n            let newLake = props.get_lake();\r\n            newLake.push([{card:nertz.current.pop(),user:\"*\"+props.id}]);\r\n            console.log(\"nertz pop:\",nertz.current.length,\"id:\",props.id);\r\n            props.updateCPUNertz(props.id,nertz.current.length);\r\n            props.newLake(newLake);\r\n            return true;\r\n        }\r\n        //idenfity other matches\r\n        let newLake = props.get_lake();\r\n        for(let pile of newLake) {\r\n            let bottom = pile[pile.length-1].card,\r\n                top = nertz.current[nertz.current.length-1];\r\n            if(lake_stack(bottom,top)) {\r\n                score.current = score.current + 1;\r\n                props.updateCPUScore(props.id,score.current);\r\n                pile.push({card:nertz.current.pop(),user:\"*\"+props.id});\r\n                props.newLake(newLake);\r\n                console.log(\"nertz pop:\",nertz.current.length,\"id:\",props.id);\r\n                props.updateCPUNertz(props.id,nertz.current.length);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const stream_river = () => {\r\n        if(streamPileSize.current === 0) {\r\n            stream_update();\r\n        }\r\n\r\n        const top = stream.current[streamIndex.current+streamPileSize.current-1];\r\n        for(let pile of river.current) {\r\n            if(solitaire_stack(pile[pile.length-1],top)) {\r\n                pile.push(top);\r\n                stream.current.splice(streamIndex.current+streamPileSize.current-1,1);\r\n                streamPileSize.current = streamPileSize.current - 1;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    const stream_lake = () => {\r\n        if(streamPileSize.current === 0) {\r\n            stream_update();\r\n        }\r\n        const top = stream.current[streamIndex.current+streamPileSize.current-1];\r\n        if(top.slice(0,2) === '01') {\r\n            score.current = score.current + 1;\r\n            props.updateCPUScore(props.id,score.current);\r\n            let newLake = props.get_lake();\r\n            newLake.push([{card:top,user:\"*\"+props.id}]);\r\n            props.newLake(newLake);\r\n            stream.current.splice(streamIndex.current+streamPileSize.current-1,1);\r\n            streamPileSize.current = streamPileSize.current - 1;\r\n            return true;\r\n        }\r\n        let newLake = props.get_lake();\r\n        for(let pile of newLake) {\r\n            if(lake_stack(pile[pile.length-1].card,top)) {\r\n                score.current = score.current + 1;\r\n                props.updateCPUScore(props.id,score.current);\r\n                pile.push({card:stream.current.splice(streamIndex.current+streamPileSize.current-1,1)[0],user:\"*\"+props.id});\r\n                streamPileSize.current = streamPileSize.current - 1;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const fill_river = () => {\r\n        for(let i=0; i<4; ++i) {\r\n            if(river.current[i].length === 0) {\r\n                river.current[i] = [nertz.current.pop()];\r\n                console.log(\"nertz pop:\",nertz.current.length,\"id:\",props.id);\r\n                props.updateCPUNertz(props.id,nertz.current.length);\r\n            }\r\n        }\r\n    }\r\n\r\n    const stream_update = () => {\r\n        //update stream index\r\n        streamIndex.current += 3;\r\n        if(streamIndex.current >= stream.current.length) {\r\n            streamIndex.current = 0;\r\n        }\r\n\r\n        //update stream pile size\r\n        streamPileSize.current = Math.min(3,stream.current.length-streamIndex.current);\r\n    }\r\n\r\n    return null;\r\n\r\n}\r\n","import Join from './Join';\r\n\r\nexport default Join;\r\n","import React, { useState } from 'react';\r\nimport './Join.css';\r\n\r\nexport default function Join(props) {\r\n    const [gameId, setGameId] = useState('');\r\n    const [numCPUs, setNumCPUs] = useState('');\r\n\r\n    const createGame = ({ offline }) => {\r\n        if(!Number(numCPUs) || Number(numCPUs) > 8) {\r\n            console.log(Number(numCPUs),Number(numCPUs) > 8);\r\n            const text = <><span>Please enter a valid number of computers opponents</span><br /><span>(MIN 0, MAX 8)</span></>;\r\n            props.throwPopup(text);\r\n        } else if(document.getElementById('create-cpu-difficulty').value === '') {\r\n            const text = <span>Please select a difficulty for the computer opponents</span>;\r\n            props.throwPopup(text);\r\n        } else {\r\n            const diff = document.getElementById('create-cpu-difficulty').value;\r\n            props.handleCreate(numCPUs,diff,offline);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"join\">\r\n            <div>\r\n                {props.isOffline ? null :\r\n                    <div>\r\n                        <h2 id=\"join-announcement\">ENTER A GAME ID TO JOIN</h2>\r\n                        <input type=\"text\" name=\"gameId\" placeholder=\"GAME ID\" onChange={(evt) => setGameId(evt.target.value.toUpperCase())} value={gameId} />\r\n                        <input type=\"button\" onClick={() => props.handleJoin(gameId)} value=\"JOIN\" />\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <h2 id=\"create-announcement\">{props.isOffline ? \"CONFIGURE YOUR GAME\" : \"OR HOST A NEW GAME\"}</h2>\r\n                    <div>\r\n                        <input id=\"create-cpu-count\" type=\"text\" placeholder=\"# CPUs\" value={numCPUs} onChange={(evt) => setNumCPUs(evt.target.value.replace(/\\D/g,''))} />\r\n                        <select id=\"create-cpu-difficulty\">\r\n                            <option value=\"\">SELECT DIFFICULTY</option>\r\n                            <option value=\"1\">EASY</option>\r\n                            <option value=\"2\">MEDIUM</option>\r\n                            <option value=\"3\">HARD</option>\r\n                            <option value=\"4\">EXPERT</option>\r\n                        </select>\r\n                    </div>\r\n                    {props.isOffline ? null : <input className=\"create-button\" type=\"button\" onClick={() => createGame({ offline: false })} value=\"CREATE ONLINE\" />}\r\n                    <input className={`create-button ${props.isOffline ? \"\" : \"outlined\"}`} type=\"button\" onClick={() => createGame({ offline: true })} value=\"PLAY OFFLINE\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Scoreboard from './Scoreboard';\r\n\r\nexport default Scoreboard;\r\n","import React, { useState } from 'react';\r\nimport './Scoreboard.css';\r\nimport { FaCheckCircle, FaTimesCircle } from 'react-icons/fa';\r\n\r\nfunction get_results(scoreUpdate) {\r\n    //fill result array with all score data\r\n    let res = [];\r\n    Object.keys(scoreUpdate).forEach((user,i) => {\r\n        //define values before appending for easier code comprehension\r\n        const lake = scoreUpdate[user].lake;\r\n        const nertz = scoreUpdate[user].nertz;\r\n        const nertzPts = -2*Number(scoreUpdate[user].nertz);\r\n        const score = Number(lake)-2*Number(nertz);\r\n        const scoreText = score < 0 ? String(score) : \"+\"+String(score);\r\n        //push player object to array\r\n        res.push({\r\n            name: user,\r\n            lake: lake,\r\n            nertz: nertz,\r\n            nertzPts: nertzPts,\r\n            score: score,\r\n            scoreText: scoreText\r\n        });\r\n    });\r\n    //organize game results by highest scores first\r\n    let change;\r\n    do {\r\n        change = false;\r\n        for(let i=0; i<res.length-1; i++) {\r\n            const score1 = res[i].score,\r\n                  score2 = res[i+1].score;\r\n            if(score1 < score2) {\r\n                //swap\r\n                [ res[i], res[i+1] ]=[ res[i+1], res[i] ];\r\n                //update change\r\n                change = true;\r\n            }\r\n        }\r\n    } while(change);\r\n    //return results\r\n    return res;\r\n}\r\n\r\nfunction get_leaderboard(scoreUpdate,scores) {\r\n    //fill leaderboard array with all score data\r\n    let lb = [];\r\n    Object.keys(scoreUpdate).forEach((user,i) => {\r\n        //define values before appending for easier code comprehension\r\n        const name = user;\r\n        const lake = Number(scoreUpdate[user].lake);\r\n        const nertz = Number(scoreUpdate[user].nertz);\r\n        const update = lake - 2*nertz;\r\n        const prev = scores[user] - update;\r\n        const total = scores[user];\r\n        //push player object to array\r\n        lb.push({\r\n            name: name,\r\n            prev: prev,\r\n            update: update,\r\n            total: total\r\n        });\r\n    });\r\n    //organize loaderboard by highest scores first\r\n    let change;\r\n    do {\r\n        change = false;\r\n        for(let i=0; i<lb.length-1; i++) {\r\n            const score1 = lb[i].total,\r\n                  score2 = lb[i+1].total;\r\n            if(score1 < score2) {\r\n                //swap\r\n                [ lb[i], lb[i+1] ]=[ lb[i+1], lb[i] ];\r\n                //update change\r\n                change = true;\r\n            }\r\n        }\r\n    } while(change);\r\n    //return leaderboard\r\n    return lb;\r\n}\r\n\r\nexport default function Scoreboard(props) {\r\n    const [isReady, setIsReady] = useState(false);\r\n    const handleReady = () => {\r\n        props.handleReady(!isReady);\r\n        setIsReady(!isReady);\r\n    }\r\n    const leaderboard = get_leaderboard(props.scoreUpdate,props.scores);\r\n    const results = get_results(props.scoreUpdate);\r\n\r\n    return (\r\n        <div id=\"scoreboard\">\r\n            <div>\r\n                <p className=\"scoreboard-title\">SCOREBOARD</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"scoreboard-subtitle\">GAME {props.gameCount} RESULTS</p>\r\n                <table className=\"scoreboard-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>PLAYER</td>\r\n                            <td>LAKE</td>\r\n                            <td>(NERTZ)</td>\r\n                            <td>TOTAL</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {results.map((user,i) =>\r\n                            <tr key={i}>\r\n                                <td>{user.name}</td>\r\n                                <td>+{user.lake}</td>\r\n                                <td>{user.nertzPts} ({user.nertz})</td>\r\n                                <td>{user.scoreText}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div>\r\n                <p className=\"scoreboard-subtitle\">CURRENT LEADERBOARD</p>\r\n                <table className=\"scoreboard-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>PLAYER</td>\r\n                            <td>PREV</td>\r\n                            <td>GAME {props.gameCount}</td>\r\n                            <td>TOTAL</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {leaderboard.map((user,i) =>\r\n                            <tr key={i}>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.prev}</td>\r\n                                <td>{user.update < 0 ? user.update : \"+\"+user.update}</td>\r\n                                <td>{user.total}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div id=\"scoreboard-ready-container\">\r\n                <div id=\"scoreboard-ready-button\" className={isReady ? \"ready\" : \"unready\"} onClick={() => handleReady()}>\r\n                    <p>{isReady ? \"CANCEL\" : \"READY\"}</p>\r\n                </div>\r\n                {props.isOffline ? null : \r\n                    <div id=\"scoreboard-ready-users\">\r\n                        {Object.keys(props.scores).map((user,i) => user !== String(\"CPU \"+Number(i+1))\r\n                            ?   <div key={i} className=\"ready-user\">\r\n                                    <>\r\n                                        <p>{user}</p>\r\n                                        {props.readyUsers.indexOf(user) !== -1 ? <FaCheckCircle className=\"ready\" title=\"ready\" /> : <FaTimesCircle className=\"unready\" title=\"not ready\" />}\r\n                                    </>\r\n                                </div>\r\n                            : null\r\n                        )}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Popup from './Popup';\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\nimport './Popup.css';\r\n\r\nexport default function Popup(props) {\r\n    return (\r\n        <div id=\"popup-backdrop\">\r\n            <div id=\"popup\">\r\n                <div id=\"popup-text\">\r\n                    <p>{props.text}</p>\r\n                </div>\r\n                <div id=\"popup-close\" onClick={() => props.handleClose()}>\r\n                    <p>OKAY</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\nimport { AiOutlineLoading3Quarters, AiOutlineLoading } from 'react-icons/ai';\r\n\r\nexport default function Spinner(props) {\r\n    return (\r\n        <div className=\"spinner-container\">\r\n            <AiOutlineLoading3Quarters size={props.size} style={{left: Math.floor((5/12)*props.size)}} title=\"loading icon 1\" />\r\n            <AiOutlineLoading size={Math.floor(props.size*(2/3))} style={{left: Math.floor((-5/12)*props.size)}} title=\"loading icon 2\" />\r\n        </div>\r\n    )\r\n}\r\n","import Connecting from './Connecting';\r\n\r\nexport default Connecting;\r\n","import React from 'react';\r\nimport { w3cwebsocket } from 'websocket';\r\nimport Header from './Header';\r\nimport Login from './Login';\r\nimport Lobby from './Lobby';\r\nimport Countdown from './Countdown';\r\nimport Game from './Game';\r\nimport CPUGame from './CPUGame';\r\nimport Join from './Join';\r\nimport Scoreboard from './Scoreboard';\r\nimport Popup from './Popup';\r\nimport Connecting from './Connecting';\r\nimport \"./App.css\";\r\n\r\nlet client;\r\nlet noConnect = false;\r\ntry {\r\n    client = new w3cwebsocket('ws:192.168.56.1:8000');\r\n} catch(err) {\r\n    console.error(\"Failed to connect to server:\", err);\r\n    noConnect = true;\r\n}\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        isJoinedOffline: false,\r\n        willBeOffline: false,\r\n        isConnected: false,\r\n        gameId: false, // false\r\n        isLoggedIn: false, // false\r\n        isRunning: false, // false\r\n        isLocked: true, // true\r\n        isReady: false,\r\n        isHost: false,\r\n        numCPUs: 0,\r\n        CPUdiff: 1,\r\n        readyUsers: [],\r\n        countdown: undefined,\r\n        countdownTimeout: [],\r\n        popup: false,\r\n        name: undefined,\r\n        users: [],\r\n        lake: [],\r\n        lastLake: 0,\r\n        lastNertz: 13,\r\n        lastCPULake: [],\r\n        lastCPUNertz: [],\r\n        scores: {},\r\n        scoreUpdate: {},\r\n        gameCount: 0\r\n    }\r\n\r\n    configureClient = () => {\r\n        client.onopen = () => {\r\n            this.setState({ isConnected: true, willBeOffline: true });\r\n        };\r\n        client.onmessage = (message) => {\r\n            const msg = JSON.parse(message.data);\r\n\r\n            switch(msg.type) {\r\n                case 'lakeupdate':\r\n                    this.setState({lake: msg.data});\r\n                    break;\r\n                case 'userlist':\r\n                    //add any new users to the score matrix\r\n                    let newScores0 = {...this.state.scores};\r\n                    msg.data.forEach((user,i) => {\r\n                        if(Object.keys(newScores0).indexOf(user) === -1) {\r\n                            newScores0[user] = 0;\r\n                        }\r\n                    });\r\n                    this.setState({users: msg.data, scores: {...newScores0}});\r\n                    break;\r\n                case 'loginstatus':\r\n                    if(msg.data) {\r\n                        this.setState({isLoggedIn: true, name: msg.data});\r\n                    } else {\r\n                        alert(\"That username is already taken. Please type another and join again.\");\r\n                    }\r\n                    break;\r\n                case 'gamestatus':\r\n                    if(msg.data === \"end\") {\r\n                        this.endGame();\r\n                        client.send(JSON.stringify({\r\n                            type: 'newscore',\r\n                            gameId: this.state.gameId,\r\n                            lake: this.state.lastLake,\r\n                            nertz: this.state.lastNertz,\r\n                            cpu: false\r\n                        }));\r\n                        if(this.state.isHost) {\r\n                            for(let i=0; i<this.state.numCPUs; i++) {\r\n                                client.send(JSON.stringify({\r\n                                    type: 'newscore',\r\n                                    gameId: this.state.gameId,\r\n                                    lake: this.state.lastCPULake[i],\r\n                                    nertz: this.state.lastCPUNertz[i],\r\n                                    cpu: true,\r\n                                    cpuId: String(\"*\"+i)\r\n                                }));\r\n                            }\r\n                        }\r\n                        //send cpu scores if host\r\n                        break;\r\n                    }\r\n                    if(msg.data > 0) {\r\n                        if(!this.state.isRunning) {\r\n                            this.setState({isRunning: true, countdown: Number(msg.data)});\r\n                        } else {\r\n                            this.setState({countdown: Number(msg.data)});\r\n                        }\r\n                    } else if(msg.data === 0) {\r\n                        //new game -> reset variables\r\n                        const blank0Arr = Array.from(Array(Number(this.state.numCPUs)), () => 0);\r\n                        const blank13Arr = Array.from(Array(Number(this.state.numCPUs)), () => 13);\r\n                        this.setState({\r\n                            countdown: undefined,\r\n                            isLocked: false,\r\n                            lake: [],\r\n                            lastLake: 0,\r\n                            lastNertz: 13,\r\n                            readyUsers: [],\r\n                            lastCPULake: [...blank0Arr],\r\n                            lastCPUNertz: [...blank13Arr]\r\n                        });\r\n                    }\r\n                    break;\r\n                case 'scoreupdate':\r\n                    let newScores1 = {...this.state.scores};\r\n                    Object.keys(msg.data).forEach((user, i) => {\r\n                        newScores1[user] += Number(msg.data[user].lake)-2*Number(msg.data[user].nertz);\r\n                    });\r\n                    this.setState({scoreUpdate: msg.data, scores: {...newScores1}, gameCount: this.state.gameCount+1});\r\n                    break;\r\n                case 'readyupdate':\r\n                    this.setState({readyUsers: msg.data});\r\n                    break;\r\n                case 'createupdate':\r\n                    if(msg.data !== false) {\r\n                        this.setState({gameId: msg.data, isHost: true}, () => {\r\n                            console.log(\"created and joined game id\",this.state.gameId);\r\n                            const text = <><span>Your new game was created! Invite your friends to play along with Game Code: </span><span className='monospace'>{this.state.gameId}</span></>;\r\n                            this.setState({popup: text});\r\n                        });\r\n                    } else {\r\n                        alert(\"An error occurred while creating your game. Please try again.\");\r\n                    }\r\n                    break;\r\n                case 'joinupdate':\r\n                    if(msg.data !== false) {\r\n                        this.setState({gameId: msg.data}, () => {\r\n                            console.log(\"joined game id\",this.state.gameId);\r\n                        });\r\n                    } else {\r\n                        alert(\"Sorry we couldn't add you to this game.\");\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.log(\"unrecognized type\",msg.type);\r\n                    break;\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(noConnect) {\r\n            this.setState({ isConnected: true, willBeOffline: true });\r\n            return;\r\n        }\r\n\r\n        if(client) {\r\n            try {\r\n                this.configureClient();\r\n            } catch(err) {\r\n                console.error(\"Failed to initialize server connection:\",err);\r\n            }\r\n        }\r\n    }\r\n\r\n    goOffline = () => {\r\n        this.setState({ isConnected: true, willBeOffline: true });\r\n        noConnect = true;\r\n        console.log(\"Zero dark thirty. Going dark\");\r\n    }\r\n\r\n    endGame = () => {\r\n        if(this.state.isJoinedOffline) {\r\n            const text = <><span>Nertz!</span><br /><br /><span>Click OKAY to view the results.</span></>;\r\n            let scoreUpdate = {};\r\n            scoreUpdate[this.state.name] = {\r\n                lake: this.state.lastLake,\r\n                nertz: this.state.lastNertz\r\n            };\r\n            for(let i=0; i<this.state.numCPUs; i++) {\r\n                const name = \"CPU \"+String(i);\r\n                scoreUpdate[name] = {\r\n                    lake: this.state.lastCPULake[i],\r\n                    nertz: this.state.lastCPUNertz[i]\r\n                };\r\n            }\r\n            let newScores1 = {...this.state.scores};\r\n            Object.keys(scoreUpdate).forEach((user, i) => {\r\n                newScores1[user] += Number(scoreUpdate[user].lake)-2*Number(scoreUpdate[user].nertz);\r\n            });\r\n            this.setState({\r\n                isLocked: true,\r\n                popup: text,\r\n                scoreUpdate: scoreUpdate,\r\n                scores: {...newScores1},\r\n                gameCount: this.state.gameCount+1\r\n            });\r\n        } else {\r\n            const text = <><span>Nertz!</span><br /><br /><span>Click OKAY to view the results.</span></>;\r\n            this.setState({isLocked: true, popup: text});\r\n        }\r\n    }\r\n\r\n    updateScore = (newValue) => {\r\n        this.setState({lastLake: newValue});\r\n    }\r\n\r\n    updateNertz = (newValue) => {\r\n        this.setState({lastNertz: newValue}, () => {\r\n            if(this.state.lastNertz === 0) {\r\n                this.endGame();\r\n                client.send(JSON.stringify({\r\n                    type: 'gamestatus',\r\n                    gameId: this.state.gameId,\r\n                    data: false\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    updateCPUScore = (id, newValue) => {\r\n        let newCPULake = this.state.lastCPULake;\r\n        newCPULake[id] = newValue;\r\n        this.setState({lastCPULake: newCPULake});\r\n    }\r\n\r\n    updateCPUNertz = (id, newValue) => {\r\n        let newCPUNertz = this.state.lastCPUNertz;\r\n        newCPUNertz[id] = newValue;\r\n        this.setState({lastCPUNertz: newCPUNertz}, () => {\r\n            for(let cpu of this.state.lastCPUNertz) {\r\n                if(cpu === 0) {\r\n                    this.endGame();\r\n                    client.send(JSON.stringify({\r\n                        type: 'gamestatus',\r\n                        gameId: this.state.gameId,\r\n                        data: false\r\n                    }));\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleJoin = (gameId) => {\r\n        if(!client) {\r\n            alert(\"Could not connect to the server. Please refresh and try again.\");\r\n            return;\r\n        }\r\n        client.send(JSON.stringify({\r\n            type: 'joingame',\r\n            data: gameId\r\n        }));\r\n    }\r\n\r\n    handleCreate = (numCPUs,diff,offline) => {\r\n        if(!offline) {\r\n            this.setState({numCPUs: numCPUs, CPUdiff: diff});\r\n            client.send(JSON.stringify({\r\n                type: 'newgame',\r\n                numCPUs: numCPUs\r\n            }));\r\n        } else {\r\n            let users = [];\r\n            let scores = {};\r\n            for(let i=0; i<numCPUs; i++) {\r\n                const name = \"CPU \"+String(i);\r\n                users.push(name);\r\n                scores[name] = 0;\r\n            }\r\n            this.setState({\r\n                numCPUs: numCPUs,\r\n                CPUdiff: diff,\r\n                users: [...users],\r\n                scores: {...scores},\r\n                isJoinedOffline: true\r\n            });\r\n        }\r\n    }\r\n\r\n    handleLogin = (name) => {\r\n        if(this.state.isJoinedOffline) {\r\n            if(this.state.users.indexOf(name) === -1) {\r\n                let users = [...this.state.users];\r\n                const scores = {...this.state.scores};\r\n                users.push(name);\r\n                scores[name] = 0;\r\n                this.setState({\r\n                    isLoggedIn: true,\r\n                    name: name,\r\n                    users: [...users],\r\n                    scores: {...scores}\r\n                });\r\n            } else {\r\n                alert(\"That username is already taken. Please type another and join again.\");\r\n            }\r\n        } else {\r\n            client.send(JSON.stringify({\r\n                type: 'newuser',\r\n                gameId: this.state.gameId,\r\n                name: name\r\n            }));\r\n        } \r\n    }\r\n\r\n    handleStart = () => {\r\n        console.log(\"start!\");\r\n        client.send(JSON.stringify({\r\n            type: 'gamestatus',\r\n            gameId: this.state.gameId,\r\n            data: true\r\n        }));\r\n        this.setState({isRunning: true, isLocked: true});\r\n    }\r\n\r\n    handleReady = (isReady) => {\r\n        if(this.state.isJoinedOffline) {\r\n            this.setState({isRunning: true, countdown: 5});\r\n            for(let i=4; i>-1; i--) {\r\n                const newTimeout = setTimeout(() => this.setState({\"countdown\":Number(i)}), 1000*(5-Number(i)) );\r\n                let timers = [...this.state.countdownTimeout];\r\n                timers.push(newTimeout);\r\n                this.setState({countdownTimeout: timers});\r\n            }\r\n            const newTimeout = setTimeout(() => {\r\n                //new game -> reset variables\r\n                const blank0Arr = Array.from(Array(Number(this.state.numCPUs)), () => 0);\r\n                const blank13Arr = Array.from(Array(Number(this.state.numCPUs)), () => 13);\r\n                this.setState({\r\n                    isLocked: false,\r\n                    countdown: undefined,\r\n                    lake: [],\r\n                    lastLake: 0,\r\n                    lastNertz: 13,\r\n                    readyUsers: [],\r\n                    lastCPULake: [...blank0Arr],\r\n                    lastCPUNertz: [...blank13Arr]\r\n                });\r\n            }, 4950);\r\n            let timers = [...this.state.countdownTimeout];\r\n            timers.push(newTimeout);\r\n            this.setState({countdownTimeout: timers});\r\n        } else {\r\n            client.send(JSON.stringify({\r\n                type: 'newready',\r\n                gameId: this.state.gameId,\r\n                data: isReady\r\n            }));\r\n        }\r\n    }\r\n\r\n    newLake = (lake) => {\r\n        if(this.state.isJoinedOffline) {\r\n            this.setState({lake: lake});\r\n        } else {\r\n            client.send(JSON.stringify({\r\n                type: 'newlake',\r\n                gameId: this.state.gameId,\r\n                data: [...lake]\r\n            }));\r\n        }\r\n    }\r\n\r\n    handlePause = (isPaused) => {\r\n        if(this.state.isJoinedOffline) {\r\n            this.setState({ isPaused });\r\n        }   \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"app-container\">\r\n                <Header name={this.state.name} gameId={this.state.gameId} />\r\n                {this.state.isConnected\r\n                    ? this.state.gameId || this.state.isJoinedOffline\r\n                        ? this.state.isLoggedIn\r\n                            ? this.state.isRunning\r\n                                ? this.state.isLocked\r\n                                    ? this.state.countdown\r\n                                        ? <Countdown text={this.state.countdown} shape={Number(this.state.countdown) ? 'circle' : 'square'} />\r\n                                        : <Scoreboard scoreUpdate={this.state.scoreUpdate} scores={this.state.scores} handleReady={this.handleReady} readyUsers={this.state.readyUsers} gameCount={this.state.gameCount} isOffline={this.state.isJoinedOffline} />\r\n                                    : <>\r\n                                        <Game lake={this.state.lake} newLake={this.newLake} name={this.state.name} updateScore={this.updateScore} updateNertz={this.updateNertz} />\r\n                                        {this.state.isHost\r\n                                            ? [...Array(Number(this.state.numCPUs))].map((n,i) =>\r\n                                                <CPUGame id={i} key={i} get_lake={() => [...this.state.lake]} newLake={this.newLake} updateCPUScore={this.updateCPUScore} updateCPUNertz={this.updateCPUNertz} difficulty={this.state.CPUdiff} />\r\n                                              )\r\n                                            : null\r\n                                        }\r\n                                      </>\r\n                                : <Lobby handleReady={this.handleReady} users={this.state.users} readyUsers={this.state.readyUsers} isOffline={this.state.isJoinedOffline} />\r\n                            : <Login handleLogin={this.handleLogin} />\r\n                        : <Join handleJoin={this.handleJoin} handleCreate={this.handleCreate} throwPopup={(text) => this.setState({popup: text})} isOffline={this.state.willBeOffline} />\r\n                    : <Connecting goOffline={this.goOffline} />\r\n                }\r\n                {this.state.popup\r\n                    ? <Popup text={this.state.popup} handleClose={() => this.setState({popup: false})} />\r\n                    : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './Connecting.css';\r\nimport Spinner from './Spinner';\r\n\r\nexport default function Connecting(props) {\r\n    return (\r\n        <div id=\"connecting\">\r\n            <h2>CONNECTING TO SERVER...</h2>\r\n            <Spinner size={30} />\r\n            <input className=\"outlined\" type=\"button\" value=\"CONTINUE OFFLINE\" onClick={props.goOffline} />\r\n        </div>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}